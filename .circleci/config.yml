# Ignore image building for deployment
version: 2
jobs:
  # api-gateway:
  #   working_directory: ~/soa2019_group2/service/api-gateway
  #   docker:
  #     - image: google/cloud-sdk
  #   steps:
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - checkout:
  #         path: ~/soa2019_group2
  #     - run:
  #         name: Config gcloud credentials
  #         command: |
  #           echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
  #           gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
  #           gcloud auth configure-docker
  #     - run:
  #         name: Build and Push docker image to asia.gcr.io
  #         command: |
  #           docker build -t asia.gcr.io/${GCLOUD_PROJECT_ID}/api-gateway:${CIRCLE_SHA1} .
  #           docker push asia.gcr.io/${GCLOUD_PROJECT_ID}/api-gateway:${CIRCLE_SHA1}
  # post-service:
  #   working_directory: ~/soa2019_group2/service/post
  #   docker:
  #     - image: google/cloud-sdk
  #   steps:
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - checkout:
  #         path: ~/soa2019_group2
  #     - run:
  #         name: Config gcloud credentials
  #         command: |
  #           echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
  #           gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
  #           gcloud auth configure-docker
  #     - run:
  #         name: Build and Push docker image to asia.gcr.io
  #         command: |
  #           docker build -t asia.gcr.io/${GCLOUD_PROJECT_ID}/post-service:${CIRCLE_SHA1} .
  #           docker push asia.gcr.io/${GCLOUD_PROJECT_ID}/post-service:${CIRCLE_SHA1}
  # search-service:
  #   working_directory: ~/soa2019_group2/service/search
  #   docker:
  #     - image: google/cloud-sdk
  #   steps:
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - checkout:
  #         path: ~/soa2019_group2
  #     - run:
  #         name: Config gcloud credentials
  #         command: |
  #           echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
  #           gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
  #           gcloud auth configure-docker
  #     - run:
  #         name: Build and Push docker image to asia.gcr.io
  #         command: |
  #           docker build -t asia.gcr.io/${GCLOUD_PROJECT_ID}/search-service:${CIRCLE_SHA1} .
  #           docker push asia.gcr.io/${GCLOUD_PROJECT_ID}/search-service:${CIRCLE_SHA1}
  # auth-service:
  #   working_directory: ~/soa2019_group2/service/auth
  #   docker:
  #     - image: google/cloud-sdk
  #   steps:
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - checkout:
  #         path: ~/soa2019_group2
  #     - run:
  #         name: Config gcloud credentials
  #         command: |
  #           echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
  #           gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
  #           gcloud auth configure-docker
  #     - run:
  #         name: Build and Push docker image to asia.gcr.io
  #         command: |
  #           docker build -t asia.gcr.io/${GCLOUD_PROJECT_ID}/auth-service:${CIRCLE_SHA1} .
  #           docker push asia.gcr.io/${GCLOUD_PROJECT_ID}/auth-service:${CIRCLE_SHA1}
  # review-service:
  #   working_directory: ~/soa2019_group2/service/review
  #   docker:
  #     - image: google/cloud-sdk
  #   steps:
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - checkout:
  #         path: ~/soa2019_group2
  #     - run:
  #         name: Config gcloud credentials
  #         command: |
  #           echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
  #           gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
  #           gcloud auth configure-docker
  #     - run:
  #         name: Build and Push docker image to asia.gcr.io
  #         command: |
  #           docker build -t asia.gcr.io/${GCLOUD_PROJECT_ID}/review-service:${CIRCLE_SHA1} .
  #           docker push asia.gcr.io/${GCLOUD_PROJECT_ID}/review-service:${CIRCLE_SHA1}
  # offer-service:
  #   working_directory: ~/soa2019_group2/service/offer
  #   docker:
  #     - image: google/cloud-sdk
  #   steps:
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - checkout:
  #         path: ~/soa2019_group2
  #     - run:
  #         name: Config gcloud credentials
  #         command: |
  #           echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
  #           gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
  #           gcloud auth configure-docker
  #     - run:
  #         name: Build and Push docker image to asia.gcr.io
  #         command: |
  #           docker build -t asia.gcr.io/${GCLOUD_PROJECT_ID}/offer-service:${CIRCLE_SHA1} .
  #           docker push asia.gcr.io/${GCLOUD_PROJECT_ID}/offer-service:${CIRCLE_SHA1}
  # profile-service:
  #   working_directory: ~/soa2019_group2/service/profile
  #   docker:
  #     - image: google/cloud-sdk
  #   steps:
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - checkout:
  #         path: ~/soa2019_group2
  #     - run:
  #         name: Config gcloud credentials
  #         command: |
  #           echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
  #           gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
  #           gcloud auth configure-docker
  #     - run:
  #         name: Build and Push docker image to asia.gcr.io
  #         command: |
  #           docker build -t asia.gcr.io/${GCLOUD_PROJECT_ID}/profile-service:${CIRCLE_SHA1} .
  #           docker push asia.gcr.io/${GCLOUD_PROJECT_ID}/profile-service:${CIRCLE_SHA1}
  service-deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "18:35:bb:77:3e:19:7f:00:e4:fc:e6:26:f5:de:15:3b"
      - run:
          name: Deploy Over SSH
          command: |
            ssh -vv -o "StrictHostKeyChecking=no" ${SSH_USER}@${SSH_HOST} "export IMAGE_VERSION=${CIRCLE_SHA1} && docker-compose stop && docker-compose rm -f && docker-compose pull && docker-compose up -d"
workflows:
  version: 2
  deploy:
    jobs:
      # - api-gateway:
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - post-service:
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - search-service:
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - auth-service:
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - review-service:
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - offer-service:
      #     filters:
      #       branches:
      #         only:
      #           - master
      # - profile-service:
      #     filters:
      #       branches:
      #         only:
      #           - master
      - service-deploy
          # requires:
          #   - api-gateway
          #   - post-service
          #   - search-service
          #   - auth-service
          #   - review-service
          #   - offer-service
          #   - profile-service